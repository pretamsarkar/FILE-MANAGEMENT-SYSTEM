include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_FILES 10
#define MAX_FILENAME_LENGTH 50

struct File {
    char name[MAX_FILENAME_LENGTH];
    int size;
};

struct File files[MAX_FILES];
int numFiles = 0;

// Function to display the menu
void displayMenu() {
    printf("\n\nFile Management System");
    printf("\n1. Create New File");
    printf("\n2. Delete File");
    printf("\n3. Modify File");
    printf("\n4. List All Files");
    printf("\n5. Exit");
    printf("\nEnter your choice (1-5): ");
}

// Function to find a file by name
int findFile(char *name) {
    int i;
    for(i = 0; i < numFiles; i++) {
        if(strcmp(files[i].name, name) == 0)
            return i;
    }
    return -1; // file not found
}

int main() {
    int choice, index, size;
    char name[MAX_FILENAME_LENGTH], newName[MAX_FILENAME_LENGTH];

    // Display the menu
    do {
        displayMenu();
        scanf("%d", &choice);

        switch(choice) {
            case 1: // Create New File
                printf("\nEnter the name of the file: ");
                scanf("%s", name);

                if(findFile(name) != -1) {
                    printf("\nFile already exists!");
                }
                else {
                    printf("Enter the size of the file (in bytes): ");
                    scanf("%d", &size);

                    if(numFiles < MAX_FILES) {
                        strcpy(files[numFiles].name, name);
                        files[numFiles].size = size;

                        printf("\nFile created successfully!");
                        numFiles++;
                    }
                    else {
                        printf("\nCannot create file. Maximum number of files reached (%d)", MAX_FILES);
                    }
                }
                break;

            case 2: // Delete File
                printf("\nEnter the name of the file: ");
                scanf("%s", name);

                index = findFile(name);
                if(index == -1) {
                    printf("\nFile not found!");
                }
                else {
                    // Shift all files after the deleted file to the left to fill the gap
                    for(int i = index; i < numFiles - 1; i++) {
                        strcpy(files[i].name, files[i + 1].name);
                        files[i].size = files[i + 1].size;
                    }

                    numFiles--;
                    printf("\nFile deleted successfully!");
                }
                break;

            case 3: // Modify File
                printf("\nEnter the name of the file: ");
                scanf("%s", name);

                index = findFile(name);
                if(index == -1) {
                    printf("\nFile not found!");
                }
                else {
                    printf("\nEnter the new name of the file: ");
                    scanf("%s", newName);

                    if(findFile(newName) != -1) {
                        printf("\nFile already exists with that name!");
                    }
                    else {
                        strcpy(files[index].name, newName);

                        printf("\nEnter the new size of the file (in bytes): ");
                        scanf("%d", &size);

                        files[index].size = size;
                        printf("\nFile modified successfully!");
                    }
                }
                break;

            case 4: // List All Files
                printf("\nAll files in the system:");
                for(int i = 0; i < numFiles; i++) {
                    printf("\n%s (%d bytes)", files[i].name, files[i].size);
                }
                break;

            case 5: // Exit
                printf("\nThank you for using the file management system!");
                break;

            default:
                printf("\nInvalid choice!");
                break;
        }

    } while(choice != 5);

    return 0;
}
